#include <keypad.h>
#include <delay.h>

flash char kbd_table[16]={
'1','2','3','A',
'4','5','6','B',
'7','8','9','C',
'*','0','#','D'};


char readkey()
{
char row,column;
kbd_init();
#asm(" SBIS __kbd_port-2,3 ")         
column=0;
#asm(" SBIS __kbd_port-2,2 ")             
column=1;
#asm(" SBIS __kbd_port-2,1 ")           
column=2;
#asm(" SBIS __kbd_port-2,0 ")             
column=3; 
#asm
	LDI  R30,LOW(0X0F)                
	OUT  __kbd_port-1,R30
	LDI  R30,LOW(0XF0)
	OUT  __kbd_port,R30 
#endasm
delay_us(500);
#asm(" SBIS __kbd_port-2,7 ")              
row=0;
#asm(" SBIS __kbd_port-2,6 ")             
row=4;
#asm(" SBIS __kbd_port-2,5 ")             
row=8;
#asm(" SBIS __kbd_port-2,4 ")            
row=12; 
kbd_init();
return kbd_table[column+row];
} 

void waitkey()
{
kbd_init();
#asm
equal___:
	IN   R30,__kbd_port-2
	ANDI R30,LOW(0x0F)
	CPI  R30,LOW(0x0F)
	BREQ  equal___
#endasm
}

void waitnokey()
{
kbd_init();
#asm
notequal___:
	IN   R30,__kbd_port-2
	ANDI R30,LOW(0x0F)
	CPI  R30,LOW(0x0F)
	BRNE  notequal___
#endasm
}

char getkey()
{
    char k;
    waitkey();     
    debounce(20);
    k = readkey(); 
    waitnokey();
    return k;
}


char getnum()
{
    char k;
do{
    waitkey(); 
    debounce(20);
    k = readkey();
    waitnokey();
  }while(!(k>=0x30 && k<=0x39)); 
    
    return k;
}

void kbd_init(void)
{
#asm
	LDI  R30,LOW(0xF0)
	OUT  __kbd_port-1,R30
	LDI  R30,LOW(0x0F)
	OUT  __kbd_port,R30 
	nop 
#endasm
}

void debounce (unsigned char Debouncing_time)
{
if( Debouncing_time > 200) Debouncing_time=200;
delay_ms(Debouncing_time);
waitkey(); 
}

